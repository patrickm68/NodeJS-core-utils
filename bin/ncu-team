#!/usr/bin/env node

'use strict';
const Request = require('../lib/request');
const auth = require('../lib/auth');
const { runPromise } = require('../lib/run');
const CLI = require('../lib/cli');
const TeamInfo = require('../lib/team_info');

require('yargs') // eslint-disable-line
  .command({
    command: 'list <team> [org]',
    desc: 'Get the list of members in a team',
    builder: (yargs) => {
      yargs
        .positional('team', {
          describe: 'Name of the team',
          type: 'string'
        })
        .positional('org', {
          describe: 'Name of the organization',
          type: 'string',
          default: 'nodejs'
        });
    },
    handler: handler
  })
  .command({
    command: 'sync <file>',
    desc:
      'Synchronize the <!-- ncu-team-sync.team($org/$team) --> block in a file',
    builder: (yargs) => {
      yargs
        .positional('file', {
          describe: 'Path to the file to update',
          type: 'string'
        });
    },
    handler: handler
  })
  .demandCommand(1, 'must provide a valid command')
  .help()
  .argv;

function handler(argv) {
  runPromise(main(argv));
}

async function main(argv) {
  const cli = new CLI();
  const credentials = await auth();
  const request = new Request(credentials);

  const [ command ] = argv._;
  switch (command) {
    case 'list':
      const info = new TeamInfo(cli, request, argv.org, argv.team);
      await info.listMembers();
      break;
    case 'sync':
      await TeamInfo.syncFile(cli, request, argv.file);
      break;
    default:
      throw new Error(`Unknown command ${command}`);
  }
}
